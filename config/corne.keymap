/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E             &kp R         &kp T               &kp Y      &kp U  &kp I      &kp O    &kp P      &kp BSPC
&kp TAB     &kp A  &kp S  &kp D             &kp F         &kp G               &kp H      &kp J  &kp K      &kp L    &kp SEMI   &kp ENTER
&kp LSHFT   &kp Z  &kp X  &kp C             &kp V         &kp B               &kp N      &kp M  &kp COMMA  &kp DOT  &kp SLASH  &kp LEFT_BRACKET
                          &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND    &kp SPACE  &mo 1  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &trans
                        &trans  &trans  &trans    &trans    &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE  &kp EXCL  &kp DOUBLE_QUOTES  &kp HASH       &kp DLLR          &kp PRCNT    &kp AMPERSAND  &kp SLASH      &kp LPAR  &kp RPAR  &kp EQUAL  &kp QUESTION
&trans     &trans    &kp SINGLE_QUOTE   &kp LESS_THAN  &kp GREATER_THAN  &trans       &trans         &kp BACKSLASH  &kp LBKT  &kp RBKT  &kp PLUS   &kp ASTERISK
&trans     &trans    &trans             &trans         &trans            &trans       &trans         &kp PIPE       &kp LBRC  &kp RBRC  &trans     &kp CARET
                                        &trans         &trans            &trans       &trans         &trans         &trans
            >;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_capslock {
            timeout-ms = <250>; // Tiempo máximo entre teclas
            key-positions = <36 41>; // Las dos de las layers 
            bindings = <&kp CAPS>; // Activar Caps Lock
        };

        combo_shift_delete {
            timeout-ms = <500>; // Tiempo máximo entre teclas
            key-positions = <11 24>; // Ajustar a las posiciones físicas de Shift y Delete
            bindings = <&kp DEL>;
        };
    };
};
